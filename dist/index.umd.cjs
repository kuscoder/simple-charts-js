(function(r,l){typeof exports=="object"&&typeof module<"u"?l(exports):typeof define=="function"&&define.amd?define(["exports"],l):(r=typeof globalThis<"u"?globalThis:r||self,l(r.SimpleChartsJS={}))})(this,function(r){"use strict";var g=Object.defineProperty;var D=(r,l,i)=>l in r?g(r,l,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[l]=i;var h=(r,l,i)=>(D(r,typeof l!="symbol"?l+"":l,i),i);class l extends Error{constructor(t){super(t),this.name="ChartError"}}class i extends l{constructor(t){super(t),this.name="ChartOptionsError"}}const y=class y{constructor(t,e={}){h(this,"WIDTH");h(this,"HEIGHT");h(this,"PADDING");h(this,"ROWS_COUNT");h(this,"MONTHS_NAMES");h(this,"DATA");h(this,"STYLES");h(this,"DPI_WIDTH");h(this,"DPI_HEIGHT");h(this,"VIEW_WIDTH");h(this,"VIEW_HEIGHT");h(this,"Y_BOUNDARIES");h(this,"X_RATIO");h(this,"Y_RATIO");h(this,"ROWS_STEP");h(this,"TEXT_STEP");h(this,"X_AXIS_DATA_COUNT");h(this,"X_AXIS_DATA_STEP");h(this,"isInitialized",!1);h(this,"rafID",0);h(this,"mouse");h(this,"container");h(this,"canvas");h(this,"ctx");h(this,"canvasRect");var d;const s=y.getOptions(e),n=((d=s.data.xAxis)==null?void 0:d.values.length)||0,o=s.data.yAxis[0].values.length;this.WIDTH=s.width,this.HEIGHT=s.height,this.PADDING=s.padding,this.ROWS_COUNT=s.rowsCount,this.MONTHS_NAMES=s.i18n.months,this.DATA={xAxis:s.data.xAxis,yAxis:s.data.yAxis},this.STYLES={textFont:s.style.textFont,textColor:s.style.textColor,secondaryColor:s.style.secondaryColor},this.DPI_WIDTH=this.WIDTH*2,this.DPI_HEIGHT=this.HEIGHT*2,this.VIEW_WIDTH=this.DPI_WIDTH,this.VIEW_HEIGHT=this.DPI_HEIGHT-this.PADDING*2,this.Y_BOUNDARIES=this.getBoundariesY(this.DATA.yAxis),this.X_RATIO=this.VIEW_WIDTH/(o-1),this.Y_RATIO=this.VIEW_HEIGHT/(this.Y_BOUNDARIES[1]-this.Y_BOUNDARIES[0]),this.ROWS_STEP=this.VIEW_HEIGHT/this.ROWS_COUNT,this.TEXT_STEP=(this.Y_BOUNDARIES[1]-this.Y_BOUNDARIES[0])/this.ROWS_COUNT,this.X_AXIS_DATA_COUNT=6,this.X_AXIS_DATA_STEP=n&&Math.round(n/this.X_AXIS_DATA_COUNT),this.mouseMoveHandler=this.mouseMoveHandler.bind(this),this.mouseLeaveHandler=this.mouseLeaveHandler.bind(this),this.drawGraph=this.drawGraph.bind(this),this.mouse=new Proxy({},{set:(...a)=>{const x=Reflect.set(...a);return this.rafID=window.requestAnimationFrame(this.drawGraph),x}}),this.container=t,this.canvas=document.createElement("canvas"),this.canvas.style.width=this.WIDTH+"px",this.canvas.style.height=this.HEIGHT+"px",this.canvas.width=this.DPI_WIDTH,this.canvas.height=this.DPI_HEIGHT,this.ctx=this.canvas.getContext("2d"),s.immediate&&this.initialize()}initialize(){this.isInitialized||(this.isInitialized=!0,this.container.appendChild(this.canvas),this.canvas.addEventListener("mousemove",this.mouseMoveHandler),this.canvas.addEventListener("mouseleave",this.mouseLeaveHandler),this.drawGraph())}destroy(){this.isInitialized&&(this.isInitialized=!1,window.cancelAnimationFrame(this.rafID),this.canvas.removeEventListener("mousemove",this.mouseMoveHandler),this.canvas.removeEventListener("mouseleave",this.mouseLeaveHandler),this.canvas.remove())}drawGraph(){this.clearAll(),this.drawAxisX(),this.drawAxisY(),this.drawLines()}clearAll(){this.ctx.clearRect(0,0,this.DPI_WIDTH,this.DPI_HEIGHT)}drawAxisX(){if(this.DATA.xAxis){this.ctx.fillStyle=this.STYLES.textColor,this.ctx.font=this.STYLES.textFont,this.ctx.lineWidth=2,this.ctx.strokeStyle=this.STYLES.secondaryColor;for(let t=1;t<=this.DATA.xAxis.values.length;t++){const e=this.getX(t);if((t-1)%this.X_AXIS_DATA_STEP===0){const s=this.getDate(this.DATA.xAxis.values[t-1]);this.ctx.fillText(s,e,this.DPI_HEIGHT-10)}this.drawGuides(e)}}}drawGuides(t){var n;if(!this.mouse.x||!this.mouse.y)return;const e=((n=this.DATA.xAxis)==null?void 0:n.values.length)||0;e&&Math.abs(t-this.mouse.x)<this.DPI_WIDTH/e/2&&(this.ctx.beginPath(),this.ctx.setLineDash([20,25]),this.ctx.moveTo(0,this.mouse.y),this.ctx.lineTo(this.DPI_WIDTH,this.mouse.y),this.ctx.stroke(),this.ctx.closePath(),this.ctx.beginPath(),this.ctx.setLineDash([]),this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.DPI_HEIGHT),this.ctx.stroke(),this.ctx.closePath())}drawAxisY(){this.ctx.lineWidth=1,this.ctx.strokeStyle=this.STYLES.secondaryColor,this.ctx.fillStyle=this.STYLES.textColor,this.ctx.font=this.STYLES.textFont,this.ctx.beginPath();for(let t=1;t<=this.ROWS_COUNT;t++){const e=String(Math.round(this.Y_BOUNDARIES[1]-this.TEXT_STEP*t)),s=t*this.ROWS_STEP+this.PADDING;this.ctx.fillText(e,5,s-10),this.ctx.moveTo(0,s),this.ctx.lineTo(this.DPI_WIDTH,s)}this.ctx.stroke(),this.ctx.closePath()}drawLines(){this.ctx.lineWidth=4;for(const t of this.DATA.yAxis){this.ctx.strokeStyle=t.color,this.ctx.beginPath();for(let e=0;e<t.values.length;e++){const s=this.getX(e),n=this.getY(t.values[e]);this.ctx.lineTo(s,n)}this.ctx.stroke(),this.ctx.closePath()}}mouseMoveHandler(t){this.canvasRect??(this.canvasRect=this.canvas.getBoundingClientRect()),this.mouse.x=(t.clientX-this.canvasRect.left)*2,this.mouse.y=(t.clientY-this.canvasRect.top)*2}mouseLeaveHandler(){this.mouse.x=null,this.mouse.y=null}getBoundariesY(t){let e=null,s=null;for(const n of t)for(const o of n.values)e=e===null||o<e?o:e,s=s===null||o>s?o:s;return[e,s]}getDate(t){const e=new Date(t),s=e.getDate(),n=e.getMonth(),o=this.MONTHS_NAMES;return`${s} ${o[n]}`}getX(t){return t*this.X_RATIO}getY(t){return this.DPI_HEIGHT-this.PADDING-t*this.Y_RATIO}static validateOptions(t={}){const{width:e,height:s,padding:n,rowsCount:o,i18n:{months:d}={},data:{xAxis:a,yAxis:x}={},style:{textFont:p,textColor:f,secondaryColor:m}={},immediate:T}=t;if(e){if(typeof e!="number")throw new i("width should be a number");if(e<=0)throw new i("width should be greater than 0");if(e%2!==0)throw new i("width should be an even number")}if(s){if(typeof s!="number")throw new i("height should be a number");if(s<=0)throw new i("height should be greater than 0");if(s%2!==0)throw new i("height should be an even number")}if(n){if(typeof n!="number")throw new i("padding should be a number");if(n<0)throw new i("padding should be greater or equal to 0")}if(o){if(typeof o!="number")throw new i("rowsCount should be a number");if(o<=0)throw new i("rowsCount should be greater than 0")}if(d){if(!Array.isArray(d))throw new i("i18n.months should be an array");if(d.length!==12)throw new i("i18n.months should have 12 elements")}if(a){if(typeof a!="object")throw new i("data.xAxis should be an object");if(typeof a.type!="string")throw new i("data.xAxis.type should be a string");if(!["date"].includes(a.type))throw new i('data.xAxis.type should be "date"');if(!Array.isArray(a.values))throw new i("data.xAxis.values should be an array");a.type==="date"&&a.values.forEach((c,u)=>{if(typeof c!="number")throw new i(`data.xAxis.values[${u}] should be a number`)})}if(x){if(!Array.isArray(x))throw new i("data.columns should be an array");x.forEach((c,u)=>{if(typeof c.name!="string")throw new i(`data.yAxis[${u}].name should be a string`);if(typeof c.color!="string")throw new i(`data.yAxis[${u}].color should be a string`);if(!Array.isArray(c.values))throw new i(`data.yAxis[${u}].values should be an array`);c.values.forEach((I,O)=>{if(typeof I!="number")throw new i(`data.yAxis[${u}].values[${O}] should be a number`)})})}if(p&&typeof p!="string")throw new i("style.textFont should be a string");if(f&&typeof f!="string")throw new i("style.textColor should be a string");if(m&&typeof m!="string")throw new i("style.secondaryColor should be a string");if(T&&typeof T!="boolean")throw new i("immediate should be a boolean")}static getOptions(t={}){var e,s,n,o,d,a;return this.validateOptions(t),{width:t.width||this.presetOptions.width,height:t.height||this.presetOptions.height,padding:t.padding||this.presetOptions.padding,rowsCount:t.rowsCount||this.presetOptions.rowsCount,i18n:{months:((e=t.i18n)==null?void 0:e.months)||this.presetOptions.i18n.months},style:{textFont:((s=t.style)==null?void 0:s.textFont)||this.presetOptions.style.textFont,textColor:((n=t.style)==null?void 0:n.textColor)||this.presetOptions.style.textColor,secondaryColor:((o=t.style)==null?void 0:o.secondaryColor)||this.presetOptions.style.secondaryColor},data:{xAxis:((d=t.data)==null?void 0:d.xAxis)||this.presetOptions.data.xAxis,yAxis:((a=t.data)==null?void 0:a.yAxis)||this.presetOptions.data.yAxis},immediate:t.immediate??this.presetOptions.immediate}}static changePresetOptions(t={}){var e,s,n,o,d,a;this.validateOptions(t),this.presetOptions.width=t.width||this.presetOptions.width,this.presetOptions.height=t.height||this.presetOptions.height,this.presetOptions.padding=t.padding||this.presetOptions.padding,this.presetOptions.rowsCount=t.rowsCount||this.presetOptions.rowsCount,this.presetOptions.i18n.months=((e=t.i18n)==null?void 0:e.months)||this.presetOptions.i18n.months,this.presetOptions.style.textFont=((s=t.style)==null?void 0:s.textFont)||this.presetOptions.style.textFont,this.presetOptions.style.textColor=((n=t.style)==null?void 0:n.textColor)||this.presetOptions.style.textColor,this.presetOptions.style.secondaryColor=((o=t.style)==null?void 0:o.secondaryColor)||this.presetOptions.style.secondaryColor,this.presetOptions.data.xAxis=((d=t.data)==null?void 0:d.xAxis)||this.presetOptions.data.xAxis,this.presetOptions.data.yAxis=((a=t.data)==null?void 0:a.yAxis)||this.presetOptions.data.yAxis,this.presetOptions.immediate=t.immediate||this.presetOptions.immediate}};h(y,"presetOptions",{width:600,height:250,padding:40,rowsCount:5,i18n:{months:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},data:{xAxis:null,yAxis:[]},style:{textFont:"normal 20px Helvetica,sans-serif",textColor:"#96a2aa",secondaryColor:"#bbbbbb"},immediate:!0});let A=y;r.Chart=A,r.ChartError=l,r.ChartOptionsError=i,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
